{
  "errors": [],
  "paths": {
    "_comment": "<add --verbose for a list of skipped paths>",
    "scanned": [
      "targets/autofix/requests-use-timeout.py"
    ]
  },
  "results": [
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 22,
        "line": 6,
        "offset": 84
      },
      "extra": {
        "fingerprint": "b3799fda60214404162a5666a72e7c08fbead3498752d921b31e446fe13306a4406e0722ec2c984d78be8582d0f92a70014900a45b03f0b24f8fc08854071459_0",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "fixed_lines": [
          "r = requests.get(url, timeout=30)"
        ],
        "is_ignored": false,
        "lines": "r = requests.get(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 6,
        "offset": 67
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 23,
        "line": 9,
        "offset": 130
      },
      "extra": {
        "fingerprint": "b3799fda60214404162a5666a72e7c08fbead3498752d921b31e446fe13306a4406e0722ec2c984d78be8582d0f92a70014900a45b03f0b24f8fc08854071459_0",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "fixed_lines": [
          "r = requests.post(url, timeout=30)"
        ],
        "is_ignored": false,
        "lines": "r = requests.post(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 9,
        "offset": 112
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 33,
        "line": 12,
        "offset": 186
      },
      "extra": {
        "fingerprint": "b3799fda60214404162a5666a72e7c08fbead3498752d921b31e446fe13306a4406e0722ec2c984d78be8582d0f92a70014900a45b03f0b24f8fc08854071459_0",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "fixed_lines": [
          "r = requests.request(\"GET\", url, timeout=30)"
        ],
        "is_ignored": false,
        "lines": "r = requests.request(\"GET\", url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 12,
        "offset": 158
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 42,
        "line": 18,
        "offset": 285
      },
      "extra": {
        "fingerprint": "b3799fda60214404162a5666a72e7c08fbead3498752d921b31e446fe13306a4406e0722ec2c984d78be8582d0f92a70014900a45b03f0b24f8fc08854071459_0",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "fixed_lines": [
          "r = requests.request(\"GET\", return_url(), timeout=30)"
        ],
        "is_ignored": false,
        "lines": "r = requests.request(\"GET\", return_url())",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 5,
        "line": 18,
        "offset": 248
      }
    },
    {
      "check_id": "rules.autofix.python.requests.best-practice.use-timeout.use-timeout",
      "end": {
        "col": 18,
        "line": 29,
        "offset": 471
      },
      "extra": {
        "fingerprint": "b3799fda60214404162a5666a72e7c08fbead3498752d921b31e446fe13306a4406e0722ec2c984d78be8582d0f92a70014900a45b03f0b24f8fc08854071459_0",
        "fix_regex": {
          "regex": "(.*)\\)",
          "replacement": "\\1, timeout=30)"
        },
        "fixed_lines": [
          "    r = post(url, timeout=30)"
        ],
        "is_ignored": false,
        "lines": "    r = post(url)",
        "message": "'requests' calls default to waiting until the connection is closed.\nThis means a 'requests' call without a timeout will hang the program\nif a response is never received. Consider setting a timeout for all\n'requests'.\n",
        "metadata": {},
        "metavars": {},
        "severity": "WARNING"
      },
      "path": "targets/autofix/requests-use-timeout.py",
      "start": {
        "col": 9,
        "line": 29,
        "offset": 462
      }
    }
  ],
  "version": "0.42"
}